# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build, Scan, and Push Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: akira-erp-repo
  IMAGE_TAG: latest

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Retrieve AWS creds from Secrets Manager
      - name: Retrieve AWS credentials from Secrets Manager
        run: |
          CREDS=$(aws secretsmanager get-secret-value \
            --region $AWS_REGION \
            --secret-id test \
            --query SecretString \
            --output text)
          echo "$CREDS" | jq -r 'to_entries | .[] | "AWS_\(.key)=\(.value)"' >> $GITHUB_ENV

      # 3️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 4️⃣ Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 5️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG \
            ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG

      # 6️⃣ Run Trivy vulnerability scanner
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.16.0
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          format: table
          exit-code: 1

      # 7️⃣ Run Trivy file scan (source code)
      - name: Run Trivy file scan
        uses: aquasecurity/trivy-action@0.16.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          format: table
          exit-code: 0

      # 8️⃣ Push image to ECR (only if everything passed)
      - name: Push image to Amazon ECR
        if: success()
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG

